# Alembic migration script.
# Revisar docs: https://alembic.sqlalchemy.org/
"""init schema"""

from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa

# Revisiones
revision: str = 'fd89eeb2a845'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('admin', 'organizer', 'attendee', name='userrole'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', name='uq_user_email')
    )
    op.create_index(op.f('ix_user_account_email'), 'user_account', ['email'], unique=True)
    op.create_index(op.f('ix_user_account_id'), 'user_account', ['id'], unique=False)
    op.create_table('event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organizer_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_at', sa.DateTime(), nullable=False),
    sa.Column('end_at', sa.DateTime(), nullable=False),
    sa.Column('venue', sa.String(length=200), nullable=True),
    sa.Column('status', sa.Enum('draft', 'published', 'archived', name='eventstatus'), nullable=False),
    sa.Column('capacity_total', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['organizer_id'], ['user_account.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_event_name'), 'event', ['name'], unique=False)
    op.create_index(op.f('ix_event_start_at'), 'event', ['start_at'], unique=False)
    op.create_index(op.f('ix_event_status'), 'event', ['status'], unique=False)
    op.create_index('ix_event_status_start', 'event', ['status', 'start_at'], unique=False)
    op.create_table('session',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_at', sa.DateTime(), nullable=False),
    sa.Column('end_at', sa.DateTime(), nullable=False),
    sa.Column('room', sa.String(length=100), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('speaker_name', sa.String(length=200), nullable=True),
    sa.Column('speaker_bio', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_session_event_id'), 'session', ['event_id'], unique=False)
    op.create_index('ix_session_event_start', 'session', ['event_id', 'start_at'], unique=False)
    op.create_index(op.f('ix_session_start_at'), 'session', ['start_at'], unique=False)
    op.create_table('registration',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'confirmed', 'cancelled', name='registrationstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user_account.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'event_id', name='uq_registration_user_event')
    )
    op.create_index(op.f('ix_registration_event_id'), 'registration', ['event_id'], unique=False)
    op.create_index(op.f('ix_registration_session_id'), 'registration', ['session_id'], unique=False)
    op.create_index(op.f('ix_registration_user_id'), 'registration', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_registration_user_id'), table_name='registration')
    op.drop_index(op.f('ix_registration_session_id'), table_name='registration')
    op.drop_index(op.f('ix_registration_event_id'), table_name='registration')
    op.drop_table('registration')
    op.drop_index(op.f('ix_session_start_at'), table_name='session')
    op.drop_index('ix_session_event_start', table_name='session')
    op.drop_index(op.f('ix_session_event_id'), table_name='session')
    op.drop_table('session')
    op.drop_index('ix_event_status_start', table_name='event')
    op.drop_index(op.f('ix_event_status'), table_name='event')
    op.drop_index(op.f('ix_event_start_at'), table_name='event')
    op.drop_index(op.f('ix_event_name'), table_name='event')
    op.drop_table('event')
    op.drop_index(op.f('ix_user_account_id'), table_name='user_account')
    op.drop_index(op.f('ix_user_account_email'), table_name='user_account')
    op.drop_table('user_account')
    # ### end Alembic commands ###
